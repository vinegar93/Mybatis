<?xml version="1.0" encoding="utf-8" ?>  
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.mybatis.mapper.UserMapper">

  <!--
	定义resultMap
	将select id id_,name name_,password password_ from user where id=#{user.id}和User类中的属性做一个映射关系
	type：resultMap最终映射的java对象类型，可以使用别名
	id：resultMap的唯一标示
  -->
  <resultMap type="user" id="userResultMap">
    <!--
      id：查询结果集的唯一标识
      column：查询出来的列名
      property： type指定的pojo类型中属性名称
    -->
    <id column="id_" property="id"/>
    <result column="name_" property="name"/>
    <result column="password_" property="password"/>
  </resultMap>
  <!--  
  	定义sql片段
  	id：sql片段的唯一标识
  	where不要写在sql片段中
  -->
  <sql id="query_user_where">
    <if test="ids!=null">
      <!--
                      使用 foreach遍历
        collection：指定输入对象的集合属性
        item：每次遍历生成的对象
        open：开始遍历时拼接的串
        close：结束遍历时拼接的串
        separator：遍历的两个对象中需要使用的拼接串
      -->
      <foreach collection="ids" item="item_id" open="AND (" close=")" separator="or">
        id=#{item_id}
      </foreach>
    </if>
  </sql>
  <!--  
    resultMap：指定定义的resultMap的id，如果这个resultMap在其他的mapper文件中，前面需要加namespace
  -->
  <select id="findUserListById" parameterType="com.mybatis.bean.UserQueryVo" 
  	resultMap="userResultMap">  
    select 
    id id_,
    name name_,
    password password_ 
    from user 
    <!--
                动态sql：通过表达式进行判断，对sql进行灵活拼接
      where：可以自动去掉条件中的第一个and  
    -->
    <where>
	  <if test="userCustomer!=null">
	    <if test="userCustomer.id!=null and userCustomer.id!=''">
          and user.id=#{userCustomer.id}
        </if>
	  </if> 
    </where>
  </select>
  
  <select id="findUserCountByIds" parameterType="com.mybatis.bean.UserQueryVo" 
  	resultType="Integer">  
    select count(*) from user 
    <!--
                动态sql：通过表达式进行判断，对sql进行灵活拼接
      where：可以自动去掉条件中的第一个and  
    -->
    <where>
	  <!-- 
	  	引用sql片段，如果refid指定的id在其他的mapper文件中，前面需要加namespace 
	  -->
	  <include refid="query_user_where"></include> 
    </where>
  </select>
  
</mapper>